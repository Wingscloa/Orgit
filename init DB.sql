CREATE TABLE Messages(
	MessageId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	GroupId INTEGER REFERENCES Group(GroupId) ON DELETE CASCADE,
	UserId INTEGER REFERENCES Users(UserId) ON DELETE CASCADE,
	Content TEXT NOT NULL,
	CreatedAt DATE DEFAULT Now
)

CREATE TABLE 


-- Users (SOFT DELETE PRI SMAZANI UCTU)
CREATE TABLE Users (
	UserId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	UserUID varchar(255) NOT NULL,
	FirstName varchar(64) NOT NULL,
	LastName varchar(64) NOT NULL,
	Nickname varchar(64) NULL,
	RoleId INTEGER REFERENCES Roles(RoleId) ON DELETE CASCADE,
	Email varchar(255) NOT NULL UNIQUE,
	ProfileIcon BYTEA NULL,
	Deleted BOOLEAN NOT NULL DEFAULT FALSE,
	DeletedAt DATE NULL,
	CreatedAt DATE DEFAULT NOW,
	LastActived DATE NOT NULL,
);


CREATE TABLE Group(
	GroupId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Name varchar(32) NOT NULL,
	Leader INTEGER REFERENCES Users(UserId) ON DELETE CASCADE,
	Description varchar(512) NOT NULL
	CreatedBy INTEGER REFERENCES Users(UserId) ON DELETE CASCADE,
	CreatedAt DATE DEFAULT NOW,
);


CREATE TABLE GroupPersons(
	GroupId INTEGER REFERENCES Group(GroupId) ON DELETE CASCADE,
	UserId INTEGER REFERENCES Users(UserId) ON DELETE CASCADE
);

CREATE TABLE Event(
	EventId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	GroupId INTEGER REFERENCES Group(GroupId) ON DELETE CASCADE,
	Name varchar(32) NOT NULL,
	Description varchar(512) NOT NULL,
	Profile BYTEA NULL
);

CREATE TABLE EventParticipant(
	EventId INTEGER REFERENCES Event(EventId) ON DELETE CASCADE,
	UserId INTEGER REFERENCES Users(UserId) ON DELETE CASCADE
);




CREATE TABLE Permissions (
	PermissionId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Name varchar(32) NOT NULL UNIQUE, 
	Poznamka varchar(255) NOT NULL UNIQUE
);



CREATE TABLE Roles (
	RoleId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Name varchar(32) NOT NULL UNIQUE,
	Description varchar(255) NULL,
	PermissionId INTEGER REFERENCES Permissions(PermissionId) ON DELETE CASCADE
);



CREATE TABLE Quests (
	GroupId INTEGER REFERENCES Group(GroupId) ON DELETE CASCADE,
	QuestsId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Name varchar(255) NOT NULL UNIQUE,
	Icon varchar(512) NOT NULL,
	Description varchar(255) NULL
);

CREATE TABLE QuestsCompleted(
	QuestId INTEGER REFERENCES Quests(QuestsId) ON DELETE CASCADE,
	UserId INTEGER REFERENCES Users(UserId) ON DELETE CASCADE
);

-- nahlaseni chyb

CREATE TABLE ReportType(
	TypeId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Nazev varchar(32) NOT NULL
);

CREATE TABLE Reports(
	ReportID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Uzivatel INTEGER REFERENCES Users(UserId) ON DELETE CASCADE,
	Types INTEGER REFERENCES ReportType(TypeId) ON DELETE CASCADE,
	Resolved BOOLEAN NOT NULL DEFAULT FALSE,
	Resolver INTEGER REFERENCES Users(UserId) ON DELETE CASCADE,
	Note varchar(512) NOT NULL
);

-- notifikace (vudce po vytvoreni akce/udalosti vsem odesle notifikaci dle DB resi server)
-- funguje na typ observe (https://refactoring.guru/design-patterns/observer)
-- + bude moct udelat notifikace

CREATE TABLE Notification(
	NotificationId INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Nazev varchar(255) NOT NULL
);